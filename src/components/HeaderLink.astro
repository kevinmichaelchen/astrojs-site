---
export interface Props extends astroHTML.JSX.AnchorHTMLAttributes {
  iconClass?: string;
  external?: boolean;
  // whether the link is removed at smaller breakpoints.
  // theoretically optional could be inferred by the absence of an iconClass.
  optional?: boolean;
}

const {
  href,
  iconClass,
  external,
  optional,
  class: className,
  ...props
} = Astro.props;
const isActive = href === Astro.url.pathname;
---

<a
  href={href}
  class:list={[
    { hidden: optional },
    { flex: !optional },
    "md:flex",
    "justify-center",
    "items-center",
    "text-gray-400",
    "hover:text-gray-700",
    "no-underline",
    { "font-semibold": isActive },
    className,
  ]}
  target={external ? "_blank" : "_self"}
  {...props}
>
  <span class:list={["hidden", { "md:flex": !external }]}>
    <slot />
  </span>
  <div class:list={[iconClass, "text-xl", "flex", { "md:hidden": !external }]}>
  </div>
</a>
